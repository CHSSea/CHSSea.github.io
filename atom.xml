<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>夏小海的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://haiyue.com/"/>
  <updated>2019-11-22T03:55:39.362Z</updated>
  <id>http://haiyue.com/</id>
  
  <author>
    <name>夏小海</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo配置Nginx,配置SSL证书</title>
    <link href="http://haiyue.com/2019/11/22/hexo-nginx/"/>
    <id>http://haiyue.com/2019/11/22/hexo-nginx/</id>
    <published>2019-11-22T01:41:49.000Z</published>
    <updated>2019-11-22T03:55:39.362Z</updated>
    
    <content type="html"><![CDATA[<p>当我们想把HEXO服务采用HTTPS协议的时候，我们利用NGINX服务来配置我们的HTTPS,HTTPS相比较HTTP来说，更加的安全，可靠。</p><a id="more"></a><h2 id="1-申请SSL证书"><a href="#1-申请SSL证书" class="headerlink" title="1.申请SSL证书"></a>1.申请SSL证书</h2><p>  我的服务器和域名都是在阿里云上面买的，所以就在阿里云的控制台中申请了免费的SSL证书，在申请通过的时候，下载证书时，选择Nginx，如下图所示：<br><img src="http://q0waqk1z9.bkt.clouddn.com/SSL.png" alt="SSL"><br>  证书解压目录如下所示，一个key文件和pem文件，如下图所示：<br><img src="http://q0waqk1z9.bkt.clouddn.com/SSL_NGINX.png" alt="nginx_ssl"></p><h2 id="2-配置NGINX"><a href="#2-配置NGINX" class="headerlink" title="2.配置NGINX"></a>2.配置NGINX</h2><p>  NGINX的安装教程网上已经有很多的教程了，这里就直接给出NGINX的配置，如下所示：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">443</span>;            <span class="comment">#监听HTTPS端口</span></span><br><span class="line">        <span class="attribute">server_name</span> <span class="number">106.15.251.138</span>;  <span class="comment">#IP地址</span></span><br><span class="line"></span><br><span class="line">        <span class="attribute">ssl</span>          <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">ssl_certificate</span>        /opt/ssl/ssl.pem;  <span class="comment">#证书的绝对路径</span></span><br><span class="line">        <span class="attribute">ssl_certificate_key</span>    /opt/ssl/ssl.key;  <span class="comment">#证书的绝对路径</span></span><br><span class="line"></span><br><span class="line">        <span class="attribute">ssl_session_cache</span>                shared:SSL:<span class="number">1m</span>;</span><br><span class="line">        <span class="attribute">ssl_session_timeout</span>              <span class="number">5m</span>;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">ssl_ciphers</span>                      HIGH:!aNULL:!MD5;</span><br><span class="line">        <span class="attribute">ssl_prefer_server_ciphers</span>        <span class="literal">on</span>;</span><br><span class="line">        <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> /&#123;</span><br><span class="line">            <span class="attribute">proxy_pass</span>              http://106.15.251.138:4000/;        <span class="comment">#要代理的地址</span></span><br><span class="line">            <span class="attribute">proxy_redirect</span>          <span class="literal">off</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span>        X-Real-IP       <span class="variable">$remote_addr</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span>        X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</span><br><span class="line">        <span class="attribute">location</span> = /50x.html &#123;</span><br><span class="line">            <span class="attribute">root</span>   html;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置完成后，可以使用./nginx -t来校验配置文件是否有问题，如果出现不识别ssl_certificate的错误，可能是没有安装ssl的服务导致的，安装即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;当我们想把HEXO服务采用HTTPS协议的时候，我们利用NGINX服务来配置我们的HTTPS,HTTPS相比较HTTP来说，更加的安全，可靠。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://haiyue.com/categories/Linux/"/>
    
    
      <category term="SSL" scheme="http://haiyue.com/tags/SSL/"/>
    
      <category term="nginx" scheme="http://haiyue.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>启动和停止的脚本</title>
    <link href="http://haiyue.com/2019/11/19/linux-%E8%84%9A%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    <id>http://haiyue.com/2019/11/19/linux-脚本操作/</id>
    <published>2019-11-19T06:11:31.000Z</published>
    <updated>2019-11-22T02:42:22.743Z</updated>
    
    <content type="html"><![CDATA[<p>会遇到在Linux环境下写脚本，常见的就是启动，删除的脚本，这里记录一下脚本如何编写，方便以后忘记时查看。</p><a id="more"></a><h2 id="1-启动脚本"><a href="#1-启动脚本" class="headerlink" title="1.启动脚本"></a>1.启动脚本</h2><p>这里就以启动HEXO服务为例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#获取当前时间</span></span><br><span class="line">time=`date +<span class="string">"%Y-%m-%d %H:%M:%S"</span>`</span><br><span class="line"><span class="comment">#打印当前时间到日志文件中</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$time</span> &gt;&gt; /opt/softinsall/hexo/logs/hexo.log</span><br><span class="line"><span class="comment">#启动HEXO服务</span></span><br><span class="line">nohup hexo s -p 80 &gt; /opt/softinsall/hexo/logs/hexo.log &amp;</span><br></pre></td></tr></table></figure><h2 id="2-停止服务脚本"><a href="#2-停止服务脚本" class="headerlink" title="2.停止服务脚本"></a>2.停止服务脚本</h2><p>这里使用停止HEXO服务为例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#获取进程ID，kill掉</span></span><br><span class="line"><span class="built_in">kill</span> -9 `ps -ef|grep hexo|grep -v grep|awk <span class="string">'&#123;print $2&#125;'</span>`</span><br></pre></td></tr></table></figure><p>grep -v grep 指的是把grep的服务过滤，awk  ‘{print $2}’指的是取查询出来的第二列的值。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;会遇到在Linux环境下写脚本，常见的就是启动，删除的脚本，这里记录一下脚本如何编写，方便以后忘记时查看。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://haiyue.com/categories/Linux/"/>
    
    
      <category term="脚本" scheme="http://haiyue.com/tags/%E8%84%9A%E6%9C%AC/"/>
    
      <category term="运维" scheme="http://haiyue.com/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>证书导入，查看和删除</title>
    <link href="http://haiyue.com/2019/11/12/%E8%AF%81%E4%B9%A6%E5%AF%BC%E5%85%A5,%E6%9F%A5%E7%9C%8B%E5%92%8C%E5%88%A0%E9%99%A4/"/>
    <id>http://haiyue.com/2019/11/12/证书导入,查看和删除/</id>
    <published>2019-11-12T07:59:07.000Z</published>
    <updated>2019-11-19T06:26:32.044Z</updated>
    
    <content type="html"><![CDATA[<p>在访问https的接口时，我们需要配置对方的证书，才能保证我们正常的访问，当两个系统配置的证书不一致时，会出现外调失败的情况，这里就记录一下查看证书详细信息的命令。</p><a id="more"></a><h2 id="1-查看jks证书的命令"><a href="#1-查看jks证书的命令" class="headerlink" title="1.查看jks证书的命令"></a>1.查看jks证书的命令</h2><p>是利用JAVA自带的keytool工具，所以先要下载和配置JAVA，找到JAVA下的bin目录，bin目录下会有keytool工具，具体的命令如下：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/jdk/bin/keytool -v -<span class="built_in">list</span> -keystore root.jks</span><br></pre></td></tr></table></figure><p>/jdk/bin/keytool代表的是keytool命令的路径，root.jks代表的是jks证书<br>如果jks中包含的cer证书比较多，可以结合grep命令使用<br>比如要检查jks证书是否包含某个cer证书，可以使用下面的命令</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/jdk/bin/keytool -v -<span class="keyword">list</span> -keystore root.jks | <span class="keyword">grep</span> <span class="string">'xxx'</span></span><br></pre></td></tr></table></figure><p>xxx就代表你要搜索的某个证书。<br>如果证书都配置的有，也要确定一下证书的信息是否相同，比如有效期、加密方式等。</p><h2 id="2-查看cer格式的证书"><a href="#2-查看cer格式的证书" class="headerlink" title="2.查看cer格式的证书"></a>2.查看cer格式的证书</h2><pre><code>在window系统中直接双击就可以打开，查看到证书信息。</code></pre><h2 id="3-cer证书导入到JAVA标准库"><a href="#3-cer证书导入到JAVA标准库" class="headerlink" title="3.cer证书导入到JAVA标准库"></a>3.cer证书导入到JAVA标准库</h2><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/jdk/bin/keytool -import -<span class="keyword">alias</span> tomcat -keystore /jdk/jre/<span class="class"><span class="keyword">lib</span>/<span class="title">security</span>/<span class="title">cacerts</span> -<span class="title">file</span> <span class="title">tomcat</span>.<span class="title">cer</span></span></span><br></pre></td></tr></table></figure><p>-alias tomcat是给证书起一个别名， /jdk/jre/lib/security/cacerts是JAVA标准库的地址，也可以是自己的jks文件，   -file tomcat.cer是自己的cer文件。</p><h2 id="4-删除jks文件中的cer证书"><a href="#4-删除jks文件中的cer证书" class="headerlink" title="4.删除jks文件中的cer证书"></a>4.删除jks文件中的cer证书</h2><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/jdk/bin/keytool -delete -<span class="keyword">alias</span> tomcat -keystore /jdk/jre/<span class="class"><span class="keyword">lib</span>/<span class="title">security</span>/<span class="title">cacerts</span></span></span><br></pre></td></tr></table></figure><p>从JAVA的标准库中删除别名为tomcat的证书。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在访问https的接口时，我们需要配置对方的证书，才能保证我们正常的访问，当两个系统配置的证书不一致时，会出现外调失败的情况，这里就记录一下查看证书详细信息的命令。&lt;/p&gt;
    
    </summary>
    
    
      <category term="JAVA" scheme="http://haiyue.com/categories/JAVA/"/>
    
    
      <category term="HTTP" scheme="http://haiyue.com/tags/HTTP/"/>
    
      <category term="证书" scheme="http://haiyue.com/tags/%E8%AF%81%E4%B9%A6/"/>
    
  </entry>
  
</feed>
